name: Main
on: workflow_dispatch
jobs:
  Desktop:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-13, macos-15]
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Install libVLC (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt install libvlc-dev libvlccore-dev

      - name: Install Libraries
        run: |
          haxelib git hxcpp https://github.com/mcagabe19-stuff/hxcpp --quiet
          haxelib git lime https://github.com/mcagabe19-stuff/lime --quiet
          haxelib install openfl 9.3.3 --quiet
          haxelib git flixel https://github.com/mikolka9144/flixel-funkin.git 901df3b291e422e6ac1ea6a838fbc32baf163197 --quiet
          haxelib install flixel-addons 3.2.2 --quiet
          haxelib install flixel-tools 1.5.1 --quiet
          haxelib install hscript-iris 1.1.0 --quiet
          haxelib install tjson 1.4.0 --quiet
          haxelib git flxanimate https://github.com/Psych-Slice/FlxAnimate.git 18091dfeb629ba2805a5f3e10f5de80433080359 --quiet
          haxelib git linc_luajit https://github.com/mcagabe19-stuff/linc_luajit-rewriten --quiet
          haxelib git hxdiscord_rpc https://github.com/MAJigsaw77/hxdiscord_rpc f9353b9edce10f4605d125dd1bda24ac36898bfb --quiet --skip-dependencies
          haxelib install hxvlc 1.8.2 --quiet --skip-dependencies
          haxelib git funkin.vis https://github.com/FunkinCrew/funkVis 22b1ce089dd924f15cdc4632397ef3504d464e90 --quiet --skip-dependencies
          haxelib git grig.audio https://gitlab.com/haxe-grig/grig.audio.git cbf91e2180fd2e374924fe74844086aab7891666 --quiet
          haxelib git FlxPartialSound https://github.com/FunkinDroidTeam/FlxPartialSound 3d1da83cca3863174ca6a56827cd95c2020754bc --quiet

      - name: Compile (Windows)
        if: startsWith(matrix.os, 'windows')
        run: haxelib run lime build windows -D officialBuild

      - name: Compile (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: haxelib run lime build linux -D officialBuild

      - name: Compile (macOS)
        if: startsWith(matrix.os, 'macos')
        run: haxelib run lime build mac -D officialBuild

      - name: Upload Artifact (Windows)
        if: startsWith(matrix.os, 'windows')
        uses: actions/upload-artifact@main
        with:
          name: windowsBuild
          path: export\release\windows\bin\*
          if-no-files-found: error

      - name: Upload Artifact (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@main
        with:
          name: linuxBuild
          path: export/release/linux/bin/*
          if-no-files-found: error

      - name: Upload Artifact (macOS 13)
        if: matrix.os == 'macos-13'
        uses: actions/upload-artifact@main
        with:
          name: macOSBuild-x86_64
          path: export/release/macos/bin/*
          if-no-files-found: error

      - name: Upload Artifact (macOS 15)
        if: matrix.os == 'macos-15'
        uses: actions/upload-artifact@main
        with:
          name: macOSBuild-arm64
          path: export/release/macos/bin/*
          if-no-files-found: error
  Mobile:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-15]
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.6

      - name: Install Libraries
        run: |
          haxelib git hxcpp https://github.com/mcagabe19-stuff/hxcpp --quiet
          haxelib git lime https://github.com/mcagabe19-stuff/lime --quiet
          haxelib install openfl 9.3.3 --quiet
          haxelib git flixel https://github.com/mikolka9144/flixel-funkin.git 901df3b291e422e6ac1ea6a838fbc32baf163197 --quiet
          haxelib install flixel-addons 3.2.2 --quiet
          haxelib install flixel-tools 1.5.1 --quiet
          haxelib install hscript-iris 1.1.0 --quiet
          haxelib install tjson 1.4.0 --quiet
          haxelib git flxanimate https://github.com/Psych-Slice/FlxAnimate.git 18091dfeb629ba2805a5f3e10f5de80433080359 --quiet
          haxelib git linc_luajit https://github.com/mcagabe19-stuff/linc_luajit-rewriten --quiet
          haxelib install hxvlc 1.8.2 --quiet --skip-dependencies
          haxelib git funkin.vis https://github.com/FunkinCrew/funkVis 22b1ce089dd924f15cdc4632397ef3504d464e90 --quiet --skip-dependencies
          haxelib git grig.audio https://gitlab.com/haxe-grig/grig.audio.git cbf91e2180fd2e374924fe74844086aab7891666 --quiet
          haxelib git FlxPartialSound https://github.com/FunkinDroidTeam/FlxPartialSound 3d1da83cca3863174ca6a56827cd95c2020754bc --quiet
          haxelib git extension-androidtools https://github.com/MAJigsaw77/extension-androidtools df9dfd0cda74e5460ae3afcfff1081c50959ed4a --quiet --skip-dependencies

      - name: Configure Android
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_LATEST_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME_17_X64
          haxelib run lime config ANDROID_SETUP true

      - name: Compile (Android)
        if: startsWith(matrix.os, 'ubuntu')
        run: haxelib run lime build android -ONLY_ARM64 -D officialBuild

      - name: Compile (iOS)
        if: startsWith(matrix.os, 'macos')
        run: haxelib run lime build ios -nosign -D officialBuild

      - name: Make Ipa
        if: startsWith(matrix.os, 'macos')
        run: |
          cd export/release/ios/build/*-iphoneos
          mkdir Payload
          mv *.app Payload
          zip -r PSliceEngine.ipa Payload

      - name: Upload Artifact (Android)
        if: startsWith(matrix.os, 'ubuntu')
        uses: actions/upload-artifact@main
        with:
          name: androidBuild
          path: export/release/android/bin/app/build/outputs/apk/release/*.apk
          if-no-files-found: error

      - name: Upload Artifact (iOS)
        if: startsWith(matrix.os, 'macos')
        uses: actions/upload-artifact@main
        with:
          name: iOSBuild
          path: export/release/ios/build/Release-iphoneos/*.ipa
          if-no-files-found: error
